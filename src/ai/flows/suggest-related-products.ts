// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview A flow to suggest related products based on the current items in the customer's cart.
 *
 * - suggestRelatedProducts - A function that suggests related products based on the current items in the customer's cart.
 * - SuggestRelatedProductsInput - The input type for the suggestRelatedProducts function.
 * - SuggestRelatedProductsOutput - The return type for the suggestRelatedProducts function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestRelatedProductsInputSchema = z.object({
  cartItems: z.array(
    z.object({
      name: z.string().describe('The name of the product in the cart.'),
      description: z.string().optional().describe('A brief description of the product.'),
    })
  ).describe('The current items in the customer\'s list.'),
});
export type SuggestRelatedProductsInput = z.infer<typeof SuggestRelatedProductsInputSchema>;

const SuggestRelatedProductsOutputSchema = z.object({
  suggestions: z.array(
    z.object({
      name: z.string().describe('The name of the suggested product.'),
      reason: z.string().describe('The reason why this product is suggested.'),
    })
  ).describe('A list of suggested products and the reasons for the suggestions.'),
});
export type SuggestRelatedProductsOutput = z.infer<typeof SuggestRelatedProductsOutputSchema>;

export async function suggestRelatedProducts(input: SuggestRelatedProductsInput): Promise<SuggestRelatedProductsOutput> {
  return suggestRelatedProductsFlow(input);
}

const suggestRelatedProductsPrompt = ai.definePrompt({
  name: 'suggestRelatedProductsPrompt',
  input: {schema: SuggestRelatedProductsInputSchema},
  output: {schema: SuggestRelatedProductsOutputSchema},
  prompt: `You are a helpful assistant in a cocoa seedling nursery. Based on the items currently in the customer's list, suggest additional items that the attendant can offer.

Here are the current items in the list:
{{#each cartItems}}
- {{name}} {{#if description}} ({{description}}){{/if}}
{{/each}}

Suggest related items that would complement the customer's current selection. For example, if they are getting a certain type of seedling, you could suggest a specific fertilizer or soil amendment. Provide a brief reason for each suggestion.

Format your response as a JSON object with a 'suggestions' array. Each object in the array should have a 'name' and a 'reason' field.
`,
});

const suggestRelatedProductsFlow = ai.defineFlow(
  {
    name: 'suggestRelatedProductsFlow',
    inputSchema: SuggestRelatedProductsInputSchema,
    outputSchema: SuggestRelatedProductsOutputSchema,
  },
  async input => {
    const {output} = await suggestRelatedProductsPrompt(input);
    return output!;
  }
);
